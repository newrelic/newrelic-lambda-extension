version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Run unit tests
          command: |
            PACKAGE_NAMES=$(go list ./... | circleci tests split --split-by=timings --timings-type=classname)
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $PACKAGE_NAMES
      - run:
          name: Run build
          command: make build
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - store_artifacts: # upload test summary for display in Artifacts
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  coverage:
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Generate coverage report
          command: make coverage
      - run:
          name: Upload coverage report
          command: bash <(curl -s https://codecov.io/bash)

  build-release-x86_64:
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Build and archive x86_64 distribution
          command: make zip-x86_64
      - store_artifacts:
          path: /tmp/newrelic-lambda-extension.x86_64.zip
          destination: newrelic-lambda-extension
      - persist_to_workspace:
          root: /tmp
          paths:
            - newrelic-lambda-extension.x86_64.zip

  build-release-arm64:
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ checksum "go.sum" }}
      - run:
          name: Build and archive arm64 distribution
          command: make zip-arm64
      - store_artifacts:
          path: /tmp/newrelic-lambda-extension.arm64.zip
          destination: newrelic-lambda-extension
      - persist_to_workspace:
          root: /tmp
          paths:
            - newrelic-lambda-extension.arm64.zip

  publish-release-x86_64:
    docker:
      - image: circleci/golang:1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Publish x86_64 release on GitHub
          command: |
            go get -u github.com/tcnksm/ghr
            ghr \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n "New Relic Lambda Extension ${CIRCLE_TAG}" \
              -replace \
              ${CIRCLE_TAG} \
              /tmp/workspace/newrelic-lambda-extension.x86_64.zip

  publish-release-arm64:
    docker:
      - image: circleci/golang:1
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Publish arm64 release on GitHub
          command: |
            go get -u github.com/tcnksm/ghr
            ghr \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n "New Relic Lambda Extension ${CIRCLE_TAG}" \
              -replace \
              ${CIRCLE_TAG} \
              /tmp/workspace/newrelic-lambda-extension.arm64.zip

workflows:
  version: 2
  all:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - coverage:
          requires:
            - build
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build-release-x86_64:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - build-release-arm64:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish-release-x86_64:
          requires:
            - build
            - build-release-x86_64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - publish-release-arm64:
          requires:
            - build
            - build-release-arm64
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
